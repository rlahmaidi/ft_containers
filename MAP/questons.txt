1- why do we need an inputiterator in constructor, and form 
where will we get it since we don't have ours defined??
MY ANSWER: I THINK A RANDOM ACCESS AND A BIDERCTIRONEL ARE ALSO AN inputiterator;

2- iterator category and iterator_tag meaning and use????????

3- why do we take the pointer and refference defintion from allocator??;

4- rebind??? (begginnig of avll_tree);          √
5- pragma once vs ifndef;                       √

6- i need to see how to test any function that returns
an iterator and a const_iterator(?), lower_bound for example?
7 - how can we test the -> operator in random_access?;
8 - why can we call random_access without template parametre inside class definition;


9 - why do we need the parent for in avll_tree??

10 - this part in delete invalide iterators i THINK
                    else
                    {
                        temp->parent = p->parent;
                        *p = *temp;
                    }





                    // else// till this removed
                    // {
                    //     temp->parent = p->parent;
                    //     *p = *temp;
                    // }
                    // _alloc.destroy(&(temp->data));
                    // _alloc_node.deallocate(temp, 1);
                    else
                    {
                        temp->parent = p->parent;
                        if(p->parent->left == p)
                            p->parent->left = temp;
                        else if(p->parent->right == p)
                            p->parent->right = temp;
                    }
                    _alloc.destroy(&(p->data));
                    _alloc_node.deallocate(p, 1);